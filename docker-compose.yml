version: '3.8'
services:
  app:
    build: .
    container_name: node_app
    restart: always
    volumes:
      - ./uploads:/usr/src/app/uploads
      - media_volume:/usr/src/app/media
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
    depends_on:
      db:
        condition: service_healthy

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
      - "8000:8000"
      - "1935:1935"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - media_volume:/opt/data/media
    depends_on:
      - app

  db:
    image: postgres:14-alpine
    container_name: postgres_db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  media_volume:
  postgres_data:
